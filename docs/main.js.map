{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/mp-lobby/team-selection-panel/team-selection-panel.component.ts","./src/app/shared/mp-lobby/team-selection-panel/team-selection-panel.component.html","./src/app/guards/prevent-deactivate.guard.ts","./src/app/components/chess-board/helpers/GetNextMove/StockfishGetNextMove.ts","./src/app/components/timer-config/timer-config.component.ts","./src/app/components/timer-config/timer-config.component.html","./src/app/shared/peer-to-peer/shared-data.ts","./src/app/pages/routes.ts","./src/environments/environment.ts","./src/app/shared/util/helpers.ts","./src/app/guards/is-connected.guard.ts","./src/app/components/chess-board-container/chess-board-container.component.ts","./src/app/components/chess-board-container/chess-board-container.component.html","./src/app/components/chess-board/chess-board.component.ts","./src/app/components/chess-board/chess-board.component.html","./src/app/pages/join/join.component.ts","./src/app/pages/join/join.component.html","./src/app/services/chess-status.service.ts","./src/app/shared/util/PlayersTurnInfo.ts","./src/app/pages/mp-lobby/mp-lobby.component.ts","./src/app/pages/mp-lobby/mp-lobby.component.html","./src/app/services/lichess.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/loading-button/loading-button.component.ts","./src/app/components/loading-button/loading-button.component.html","./src/app/components/chess-board/helpers/GetNextMove/NullGetNextMove.ts","./src/app/services/peer-to-peer.service.ts","./node_modules/peerjs/dist sync","./src/app/pipes/replace-null-with-empty.pipe.ts","./src/app/app.module.ts","./src/app/services/chess-timer.service.ts","./src/app/services/chess-board-reset.service.ts","./src/app/services/chess-timer-format.pipe.ts","./src/app/components/chess-timer/chess-timer.component.ts","./src/app/components/chess-timer/chess-timer.component.html","./src/app/services/audio.service.ts","./src/app/components/chess-board/helpers/MoveHandlerResolver.ts","./src/app/services/shared-data.service.ts","./src/app/components/chess-board/helpers/ChessgroundHelpers.ts","./src/app/components/snap-slider/snap-slider.component.ts","./src/app/components/snap-slider/snap-slider.component.html","./src/app/components/analyse-button/analyse-button.component.ts","./src/app/components/analyse-button/analyse-button.component.html","./src/app/components/rematch-button/rematch-button.component.ts","./src/app/components/rematch-button/rematch-button.component.html","./src/app/shared/util/play.ts","./src/app/shared/mp-lobby/player-config/player-config.component.ts","./src/app/shared/mp-lobby/player-config/player-config.component.html","./src/app/app-routing.module.ts","./src/app/components/chess-board/helpers/PlayerTeamHelper.ts","./src/app/components/chess-board/helpers/OnePlayerBoardChanger.ts","./src/app/shared/chessjs-types.ts","./src/app/components/player-list/player-list.component.ts","./src/app/components/player-list/player-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { LoadingButtonComponent } from 'src/app/components/loading-button/loading-button.component';\nimport { PeerToPeerService } from 'src/app/services/peer-to-peer.service';\nimport { RouteNames } from '../routes';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  control: FormGroup;\n  loading: boolean = false;\n  err = '';\n  @ViewChild('myButton', {static: false}) button: LoadingButtonComponent | null = null;\n\n  constructor(private peerToPeerService: PeerToPeerService,\n    private router: Router) {\n    this.control = new FormGroup({\n      name: new FormControl('')\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.control.setValue({'name': 'dom'});\n      // this.hostGameIfValid();\n    }, 1)\n  }\n\n  hostGameIfValid = async () => {\n    if (!this.control.valid) return;\n    this.loading = true;\n\n    try {\n      await this.hostGame();\n      this.err = '';\n    } catch(err) {\n      this.err = err;\n    } finally {\n      this.loading = false;\n    }\n\n  }\n\n  async hostGame() {\n    this.peerToPeerService.setAlias(this.control.controls['name'].value);\n    await this.peerToPeerService.setupAsHost();\n    this.router.navigate([RouteNames.MP_LOBBY], { replaceUrl: true });\n  }\n}\n","<h1>Chess MP</h1>\n<form [formGroup]=\"control\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input matInput formControlName=\"name\" required>\n  </mat-form-field>\n  <div style=\"text-align:center\">\n    <app-loading-button text=\"Host Game\" (click)=\"hostGameIfValid()\" [loading]=\"loading\" #myButton></app-loading-button>\n  </div>\n</form>\n<div *ngIf='err != \"\"'>{{err}}</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Color } from 'chessground/types';\nimport { Observable } from 'rxjs';\nimport { IPlayerTeam, PlayerTeamDict } from 'src/app/components/chess-board/helpers/PlayerTeamHelper';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\n\nconst debug = console.log;\n\n@Component({\n  selector: 'app-team-selection-panel',\n  templateUrl: './team-selection-panel.component.html',\n  styleUrls: ['./team-selection-panel.component.scss']\n})\nexport class TeamSelectionPanelComponent implements OnInit {\n  @Input() team: Color = 'white';\n  teamDict$!: Observable<PlayerTeamDict>;\n\n  constructor(private sharedDataService: SharedDataService) {\n  }\n\n  ngOnInit(): void {\n    debug(\"team selection init...\");\n    this.teamDict$ = this.sharedDataService.getNameObservable(this.team);\n  }\n\n  onDestroy() {\n    debug(\"panel destroyed...\");\n  }\n\n  trackByFn(index: number, entry: {key: string, value: IPlayerTeam}): string {\n    return entry.key;\n  }\n\n  setTeam() {\n    this.sharedDataService.setTeam(this.team);\n  }\n\n  addCPU() {\n    this.sharedDataService.addCPU(this.team);\n  }\n\n}\n","<h2>{{team | titlecase }} team</h2>\n<button mat-button (click)=\"setTeam()\">Set Team</button>\n<button mat-button (click)=\"addCPU()\">Add CPU</button>\n\n<mat-accordion>\n  <mat-expansion-panel *ngFor=\"let item of (teamDict$ | async) | keyvalue; trackBy: trackByFn\" hideToggle [disabled]=\"!item.value.engineSettings\" (destroyed)=\"onDestroy()\">\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        {{item.value.name}}\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n\n    <app-player-config [player]=\"item.value\" [playerId]=\"item.key\"></app-player-config>\n  </mat-expansion-panel>\n</mat-accordion>\n","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PreventDeactivateGuard implements CanDeactivate<unknown> {\n  canDeactivate(\n    component: unknown,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return window.confirm(\"Do you actually want to leave here?\");\n  }\n  \n}\n","import { ChessInstance, ShortMove, Square } from \"chess.js\";\nimport { Subject, timer } from \"rxjs\";\nimport { IGetNextMove } from \"./IGetNextMove\";\nimport { filter, take, tap } from 'rxjs/operators';\nimport { IEngineSettings } from \"../PlayerTeamHelper\";\n\n// declare var require: any;\n// const Stockfish = require('stockfish.wasm'); // the module, not the file\n\nexport class StockfishGetNextMove implements IGetNextMove {\n  initPromise: Promise<any>;\n  sf: any;\n  sfEmitter = new Subject<string>();\n\n  movetime = 700;\n\n  constructor(private engineSettings: IEngineSettings) {\n    // @ts-ignore\n    this.movetime = engineSettings.timeForMove ?? 700;\n\n    // @ts-ignore\n    this.initPromise = Stockfish().then((sf: any) => {\n      this.sf = sf;\n      sf.addMessageListener((line: any) => {\n        this.sfEmitter.next(line);\n\n        // console.log(line);\n        if (line == \"uciok\") {\n          console.log(\"OK!\");\n          //sf.postMessage(\"setoption name UCI_LimitStrength value true\");\n          //sf.postMessage(\"setoption name UCI_Elo value 1350\");\n          //sf.postMessage(\"setoption name MultiPV value 5\");\n\n          //sf.postMessage(\"setoption name Skill Level value 0\");\n          //sf.postMessage(\"setoption name Skill Level Maximum Error value 900\");\n          //sf.postMessage(\"setoption name Skill Level Probability value 10\")\n        }\n      });\n      sf.postMessage(\"uci\");\n    });\n  }\n\n  doInit() {\n    return this.initPromise.then();\n  }\n\n  async getMove(cg: ChessInstance) {\n    const t = timer(this.movetime);\n    t.pipe()\n    await this.doInit();\n    console.log(cg.fen());\n    this.sf.postMessage(`position fen ${cg.fen()}`);\n    this.sf.postMessage(`go movetime ${this.movetime}`);\n\n    const bestMovePromise = this.sfEmitter.pipe(\n      filter(val => val.startsWith(\"bestmove\")),\n      take(1)\n    ).toPromise();\n    const timerPromise = t.pipe(take(1)).toPromise();\n\n    await timerPromise;\n    const bestMove = await bestMovePromise;\n\n    const s = bestMove.split(\" \")[1];\n    const promotion = bestMove.length === 5 ? bestMove[4] : '';\n    const ret: ShortMove = {\n      from: (s[0] + s[1]) as Square,\n      to: (s[2] + s[3]) as Square,\n      promotion: promotion as any\n    };\n    return ret;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ISharedData } from 'src/app/shared/peer-to-peer/shared-data';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\n\n@Component({\n  selector: 'app-timer-config',\n  templateUrl: './timer-config.component.html',\n  styleUrls: ['./timer-config.component.scss']\n})\nexport class TimerConfigComponent implements OnInit {\n  updateWhiteTime = (val: number) => this.sharedDataService.setSharedData({timerSettings: {whiteTime: val}});\n  updateWhiteIncrement = (val: number) => this.sharedDataService.setSharedData({timerSettings: {whiteIncrement: val}});\n\n  sharedData: Observable<ISharedData>;\n\n  constructor(private sharedDataService: SharedDataService) {\n    this.sharedData = this.sharedDataService.sharedData.asObservable();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-snap-slider\nlabel=\"Time\"\n[min]=\"15\"\n[max]=\"3600\"\n[value]=\"(sharedData | async)?.timerSettings?.whiteTime\"\n\n[updateModel]=\"updateWhiteTime\"\n></app-snap-slider>\n\n<app-snap-slider\nlabel=\"Increment\"\n[min]=\"0\"\n[max]=\"30\"\n[value]=\"(sharedData | async)?.timerSettings?.whiteIncrement\"\n\n[updateModel]=\"updateWhiteIncrement\"\n></app-snap-slider>","import { mateInTwoFen } from \"../fen\";\n\nexport interface ISharedData extends ISharedDataOptionals {\n  matchCount: number;\n}\n\nexport interface ISharedDataOptionals {\n  timerSettings?: ITimerSettings;\n  startFen?: string;\n}\n\nexport interface ITimerSettings {\n  whiteTime?: number;\n  whiteIncrement?: number;\n  asymmetric?: boolean;\n  blackTime?: number;\n  blackIncrement?: number;\n}\n\nexport function getDefaultSharedData(): ISharedData {\n  return {\n    timerSettings: {\n      whiteTime: 60,\n      whiteIncrement: 2,\n      asymmetric: true,\n      blackTime: 60,\n      blackIncrement: 0\n    },\n    // startFen: mateInTwoFen,\n    matchCount: 1\n  }\n}","export enum RouteNames {\n  MP_LOBBY = 'mplobby',\n  HOME = '',\n  PLAY = 'play',\n  JOIN = 'join'\n};","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { isPlainObject, isSymbol } from 'is-what'\n\nfunction assignProp(\n  carry: Record<string, any>,\n  key: string,\n  newVal: any,\n  originalObject: Record<string, any>\n): void {\n  const propType = {}.propertyIsEnumerable.call(originalObject, key)\n    ? 'enumerable'\n    : 'nonenumerable'\n  if (propType === 'enumerable') carry[key] = newVal\n  if (propType === 'nonenumerable') {\n    Object.defineProperty(carry, key, {\n      value: newVal,\n      enumerable: false,\n      writable: true,\n      configurable: true,\n    })\n  }\n}\n\nfunction mergeRecursively<\n  T1 extends Record<string, any> | any,\n  T2 extends Record<string, any> | any\n>(\n  origin: T1,\n  newComer: T2,\n  compareFn?: (prop1: any, prop2: any, propName: string) => any\n): (T1 & T2) | T2 {\n  // always return newComer if its not an object\n  if (!isPlainObject(newComer)) return newComer\n  // define newObject to merge all values upon\n  let newObject = {} as (T1 & T2) | T2\n  if (isPlainObject(origin)) {\n    const props = Object.getOwnPropertyNames(origin)\n    const symbols = Object.getOwnPropertySymbols(origin)\n    newObject = [...props, ...symbols].reduce((carry, key) => {\n      const targetVal = origin[key as string]\n      if (\n        (!isSymbol(key) && !Object.getOwnPropertyNames(newComer).includes(key)) ||\n        (isSymbol(key) && !Object.getOwnPropertySymbols(newComer).includes(key))\n      ) {\n        assignProp(carry as Record<string, any>, key as string, targetVal, origin)\n      }\n      return carry\n    }, {} as (T1 & T2) | T2)\n  }\n  // newObject has all properties that newComer hasn't\n  const props = Object.getOwnPropertyNames(newComer)\n  const symbols = Object.getOwnPropertySymbols(newComer)\n  const result = [...props, ...symbols].reduce((carry, key) => {\n    // re-define the origin and newComer as targetVal and newVal\n    let newVal = newComer[key as string]\n    const targetVal = isPlainObject(origin) ? origin[key as string] : undefined\n    // When newVal is an object do the merge recursively\n    if (targetVal !== undefined && isPlainObject(newVal)) {\n      newVal = mergeRecursively(targetVal, newVal, compareFn)\n    }\n    const propToAssign = compareFn ? compareFn(targetVal, newVal, key as string) : newVal\n    assignProp(carry as Record<string, any>, key as string, propToAssign, newComer)\n    return carry\n  }, newObject)\n  return result\n}\n\n/**\n * Merge anything recursively.\n * Objects get merged, special objects (classes etc.) are re-assigned \"as is\".\n * Basic types overwrite objects or other basic types.\n * @param object\n * @param otherObjects\n */\nexport function merge<T extends Record<string, any>, Tn extends Record<string, any>[]>(\n  object: T,\n  ...otherObjects: Tn\n): /* O.Assign<T, Tn, 'deep'> */ any {\n  return otherObjects.reduce((result, newComer) => {\n    return mergeRecursively(result, newComer)\n  }, object) as any\n}\n\nexport function mergeAndCompare<T extends Record<string, any>, Tn extends Record<string, any>[]>(\n  compareFn: (prop1: any, prop2: any, propName: string | symbol) => any,\n  object: T,\n  ...otherObjects: Tn\n): /*O.Assign<T, Tn, 'deep'>*/ any {\n  return otherObjects.reduce((result, newComer) => {\n    return mergeRecursively(result, newComer, compareFn)\n  }, object) as any\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { RouteNames } from '../pages/routes';\nimport { PeerToPeerService } from '../services/peer-to-peer.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IsConnectedGuard implements CanActivate {\n  constructor(private peerToPeerService: PeerToPeerService,\n    private router: Router)\n  {\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.peerToPeerService.isConnected) {\n      return this.router.parseUrl('/' + RouteNames.HOME);\n    }\n    return true;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ChessBoardResetService } from 'src/app/services/chess-board-reset.service';\n\n@Component({\n  selector: 'app-chess-board-container',\n  templateUrl: './chess-board-container.component.html',\n  styleUrls: ['./chess-board-container.component.scss']\n})\nexport class ChessBoardContainerComponent implements OnInit {\n  visible = true;\n  sub!: Subscription;\n\n  constructor(private chessBoardResetService: ChessBoardResetService) {\n  }\n\n  ngOnInit(): void {\n    this.sub = this.chessBoardResetService.getResetObservable().subscribe(() => {\n      this.visible = false;\n      setTimeout(() => this.visible = true, 500);\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n}\n","<app-chess-board *ngIf=\"visible; else loading\"></app-chess-board>\n<ng-template #loading>\n  <mat-spinner></mat-spinner>\n</ng-template>\n","import { Component, HostListener, Inject, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Chessground } from 'chessground';\nimport { NgxChessgroundComponent, NgxChessgroundModule } from 'ngx-chessground';\nimport * as ChessJS from 'chess.js';\nimport { OnePlayerBoardChanger } from './helpers/OnePlayerBoardChanger';\nimport { Api } from 'chessground/api';\nimport { Color, Key, Piece, PiecesDiff } from 'chessground/types';\nimport { MoveHandlerResolver } from './helpers/MoveHandlerResolver';\nimport { ChessTimerService } from 'src/app/services/chess-timer.service';\nimport { ChessStatusService } from 'src/app/services/chess-status.service';\nimport { DEFAULT_ID, PeerToPeerService } from 'src/app/services/peer-to-peer.service';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\nimport { AudioService } from 'src/app/services/audio.service';\nimport { promoteIfNecessary, removeEnPassantIfNecessary } from './helpers/ChessgroundHelpers';\nimport { Subscription } from 'rxjs';\nexport const Chess = typeof ChessJS === 'function' ? ChessJS : ChessJS.Chess;\n\n@Component({\n  selector: 'app-chess-board',\n  templateUrl: './chess-board.component.html',\n  styleUrls: ['./chess-board.component.scss'],\n  providers: [ChessStatusService, ChessTimerService]\n})\nexport class ChessBoardComponent implements OnInit, OnDestroy {\n  readonly myTeam: Color;\n\n  private moveHandlerResolver!: MoveHandlerResolver; // todo: service?\n  private readonly isSinglePlayer;\n  private historicalMoveNumber!: number;\n  private chessTimerSubscription!: Subscription;\n  private peerToPeerSubscription!: Subscription;\n\n  @ViewChild('chess') ngxChessgroundComponent!: NgxChessgroundComponent;\n\n  private cg!: Api;\n\n  constructor(private chessTimerService: ChessTimerService,\n    private chessStatusService: ChessStatusService,\n    private peerToPeerService: PeerToPeerService,\n    private sharedDataService: SharedDataService,\n    private audioService: AudioService) {\n    this.isSinglePlayer = !this.peerToPeerService.isConnected;\n    this.myTeam = this.chessStatusService.playersTurnInfo.getTeam(this.peerToPeerService.getId());\n  }\n\n  ngOnInit() {\n    this.updateMoveHandlerResolver();\n    this.historicalMoveNumber = 0;\n  }\n\n  ngAfterViewInit(): void {\n    this.ngxChessgroundComponent.runFn = this.run.bind(this);\n\n    this.chessTimerSubscription = this.chessTimerService.timeout.subscribe(color => {\n      this.chessStatusService.setTimeout(color);\n      this.onGameOver();\n    });\n\n    this.peerToPeerSubscription = this.peerToPeerService.messageSubject.subscribe(message => {\n      if (message.data.command === 'MOVE') {\n        if (message.data.matchId !== this.sharedDataService.sharedData.getValue().matchCount) {\n          return;\n        }\n        this.processMoveFromExternal({from: message.data.orig, to: message.data.dest, promotion: message.data.promotion});\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.cg.destroy();\n    this.chessTimerSubscription.unsubscribe();\n    this.peerToPeerSubscription.unsubscribe();\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    if (event.key === \"ArrowLeft\") {\n      this.navigatePosition(-1);\n    }\n\n    if (event.key === \"ArrowRight\") {\n      this.navigatePosition(1);\n    }\n  }\n\n  private run(el: any) {\n    console.log(\"RUN\");\n    this.cg = Chessground(el, {\n      turnColor: 'white',\n      animation: {\n        enabled: false\n      },\n      movable: {\n        free: false,\n      },\n      draggable: {\n        showGhost: true,\n      },\n      highlight: {\n        check: true,\n      },\n    });\n\n    const sharedData = this.sharedDataService.sharedData.getValue();\n    if (sharedData.startFen) {\n      this.setFen(sharedData.startFen);\n    }\n\n    this.cg.set({\n      animation: { enabled: true },\n      events: { move: (orig, dest) => this.cgMoveHandler(orig, dest, 'q') },\n    });\n\n    this.setupTimer();\n\n    if (this.myTeam === 'black') {\n      this.cg.toggleOrientation();\n    }\n\n    this.setupDebug();\n    this.getAndApplyCPUMove();\n    this.setBoardMouseEvents();\n\n    return this.cg;\n  }\n\n  private setupTimer() {\n    const sharedData = this.sharedDataService.sharedData.getValue();\n    const timerSettings = sharedData.timerSettings;\n    if (timerSettings == undefined) throw new Error('timer settings shoudl not be undefined');\n    this.chessTimerService.setupTimer(timerSettings, this.chessStatusService.getColor());\n    this.chessTimerService.startTimer();\n  }\n\n  private setupDebug() {\n    const anyWindow = window as any;\n    anyWindow['cg'] = this.cg;\n    anyWindow['chess'] = this.chessStatusService.chess;\n  }\n\n  private setFen(fen: string) {\n    this.cg.set({fen});\n    this.chessStatusService.setFen(fen);\n  }\n\n  private cgMoveHandler(orig: Key, dest: Key, promotion?: Exclude<ChessJS.PieceType, 'p'>) {\n    this.movePieceWithEnPassantAndPromotion({from: orig, to: dest, promotion});\n\n    this.chessTimerService.setTurn(this.chessStatusService.getColor())  \n    this.setBoardMouseEvents();\n    this.cg.playPremove();\n\n    if (this.chessStatusService.isGameOver()) {\n      this.onGameOver();\n    }\n\n    this.historicalMoveNumber = this.chessStatusService.getNumMoves();\n    this.getAndApplyCPUMove();\n  }\n\n  private movePieceWithEnPassantAndPromotion(move: ChessJS.ShortMove) {\n    const oldColor = this.chessStatusService.getColor();\n\n    if (!this.isSinglePlayer && this.chessStatusService.didMoveBelongToPlayer(this.peerToPeerService.getId())) {\n      this.peerToPeerService.broadcast({\n        command: 'MOVE',\n        numMoves: this.chessStatusService.getNumMoves(),\n        orig: move.from,\n        dest: move.to,\n        matchId: this.sharedDataService.sharedData.getValue().matchCount,\n        promotion: move.promotion\n      })\n    }\n\n    const resMove = this.chessStatusService.move(move);\n\n    promoteIfNecessary(resMove!, this.cg, oldColor);\n    removeEnPassantIfNecessary(resMove!, this.cg);\n\n    this.playMoveSound(resMove!.captured != null);\n\n    this.cg.set({\n      check: this.chessStatusService.chess.in_check() ? this.chessStatusService.getColor() : undefined,\n    });\n\n    return move;\n  }\n\n  private playMoveSound(captured: boolean) {\n    if (captured) {\n      this.audioService.capture.play();\n    } else {\n      this.audioService.move.play();\n    }\n  }\n\n  private onGameOver() {\n    this.audioService.genericNotify.play();\n    this.chessTimerService.pauseTimer();\n  }\n\n  private setBoardMouseEvents() {\n    if (this.chessStatusService.isGameOver()) {\n      return OnePlayerBoardChanger.setUnmovable(this.cg);\n    }\n    if (this.chessStatusService.isPlayersMove(this.peerToPeerService.getId())) {\n      return this.setBoardMouseEventMovable();\n    }\n    if (this.chessStatusService.isPlayersMoveNext(this.peerToPeerService.getId())) {\n      return OnePlayerBoardChanger.setPremovable(this.chessStatusService.chess, this.cg);\n    }\n    return OnePlayerBoardChanger.setUnmovable(this.cg);\n  }\n\n  private setBoardMouseEventMovable() {\n    if (this.chessStatusService.isGameOver()) {\n      return OnePlayerBoardChanger.setUnmovable(this.cg);\n    }\n    return OnePlayerBoardChanger.setMovable(this.chessStatusService.chess, this.cg);\n  }\n\n  private async getAndApplyCPUMove() {\n    const move = await this.moveHandlerResolver.getMoveHander(this.chessStatusService.getNumMovesConsideringIfBlackWentFirst()).getMove(this.chessStatusService.chess);\n    if (this.chessStatusService.isGameOver()) return;\n    if (move != null) {\n      console.log(\"APPLY CPU MOVE\");\n      this.processMoveFromExternal(move);\n    }\n  }\n\n  private processMoveFromExternal(move: ChessJS.ShortMove) {\n    this.resetHistoryIfRequired();\n    this.cg.move(move.from, move.to);\n  }\n\n  private navigatePosition(offset: number) {\n    if (offset < 0 && this.historicalMoveNumber + offset >= 0) {\n      this.historicalMoveNumber += offset;\n      this.setCgForHistoricalMove(this.historicalMoveNumber, true);\n      OnePlayerBoardChanger.setUnmovable(this.cg);\n    }\n    else if (offset > 0 && this.historicalMoveNumber + offset <= this.chessStatusService.getNumMoves()) {\n      this.historicalMoveNumber += offset;\n      this.setCgForHistoricalMove(this.historicalMoveNumber);\n      if (this.historicalMoveNumber == this.chessStatusService.getNumMoves()) {\n        this.setBoardMouseEventMovable();\n      }\n    }\n  }\n\n  private setCgForHistoricalMove(moveNumber: number, movingBackward: boolean = false) {\n    const fen = this.chessStatusService.getFenForMove(moveNumber);\n    this.cg.set({fen});\n    if (moveNumber == 0) {\n      this.cg.set({lastMove: undefined});\n    } else {\n      const lastMove = this.chessStatusService.getPreviousMoveForMove(moveNumber);\n      this.cg.set({\n        lastMove: [lastMove.from, lastMove.to],\n        highlight: {lastMove: true},\n      });\n    }\n    this.cg.set({\n      check: this.chessStatusService.isInCheck(moveNumber) ? this.chessStatusService.getColor() : false\n    })\n    this.playSoundForMoveNumber(moveNumber + (movingBackward ? 1 : 0));\n  }\n\n  private playSoundForMoveNumber(moveNumber: number) {\n    if (moveNumber <= 0) return;\n    const lastMove = this.chessStatusService.getPreviousMoveForMove(moveNumber);\n    this.playMoveSound(lastMove.captured != null);\n  }\n\n  private resetHistoryIfRequired() {\n    if (this.historicalMoveNumber != this.chessStatusService.getNumMoves()) {\n      this.historicalMoveNumber = this.chessStatusService.getNumMoves();\n      const oldAnimation = this.cg.state.animation.enabled;\n      this.cg.set({animation: {enabled: false}});\n      this.cg.set({fen: this.chessStatusService.getFenForMove(this.historicalMoveNumber)});\n      this.cg.set({animation: {enabled: oldAnimation}});\n    }\n  }\n\n  private updateMoveHandlerResolver() {\n    const whiteTeamDict = this.sharedDataService.getColorNames('white');\n    const blackTeamDict = this.sharedDataService.getColorNames('black');\n    return this.moveHandlerResolver = new MoveHandlerResolver(whiteTeamDict, blackTeamDict);\n  }\n}\n","<main>\n  <div>\n    <ngx-chessground class='is2d' #chess></ngx-chessground>\n  </div>\n  <app-chess-timer [inverted]=\"myTeam === 'black'\"></app-chess-timer>\n</main>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { LoadingButtonComponent } from 'src/app/components/loading-button/loading-button.component';\nimport { PeerToPeerService } from 'src/app/services/peer-to-peer.service';\nimport { environment } from 'src/environments/environment';\nimport { RouteNames } from '../routes';\n\n@Component({\n  selector: 'app-join',\n  templateUrl: './join.component.html',\n  styleUrls: ['./join.component.scss']\n})\nexport class JoinComponent implements OnInit {\n\n  disabled: boolean = false;\n  control: FormGroup;\n  loading: boolean = false;\n  joinId = '';\n  activateRouteSubscription: Subscription;\n  err = '';\n  @ViewChild('myButton', {static: false}) button: LoadingButtonComponent | null = null;\n\n  constructor(private peerToPeerService: PeerToPeerService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) {\n    this.control = new FormGroup({\n      name: new FormControl('')\n    });\n    this.activateRouteSubscription = this.activatedRoute.params.subscribe(params => {\n      this.joinId = params.id;\n      this.control.enable()\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.joinId == '') this.control.disable();\n  }\n\n  ngOnDestroy() {\n    this.activateRouteSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    if (!environment.production) {\n      setTimeout(() => {\n        this.control.setValue({'name': 'other'});\n        this.joinGameIfValid();\n      }, 1)\n    }\n  }\n\n  joinGameIfValid = async () => {\n    if (!this.control.valid) return;\n    this.loading = true;\n\n    try {\n      await this.joinGame();\n      this.err = '';\n    } catch(err) {\n      this.err = err;\n    } finally {\n      this.loading = false;\n    }\n\n  }\n\n  async joinGame() {\n    await this.peerToPeerService.setupByConnectingToId(this.joinId);\n    this.peerToPeerService.setAlias(this.control.controls['name'].value);\n    this.router.navigate([RouteNames.MP_LOBBY], { replaceUrl: true });\n  }\n\n}\n","\n<h1>Chess MP - Join Game</h1>\n<form [formGroup]=\"control\">\n  <mat-form-field class=\"example-full-width\">\n    <mat-label>Name</mat-label>\n    <input matInput formControlName=\"name\" required>\n  </mat-form-field>\n  <div style=\"text-align:center\">\n    <app-loading-button text=\"Join Game\" (click)=\"joinGameIfValid()\" [loading]=\"loading\" #myButton></app-loading-button>\n  </div>\n</form>\n<div *ngIf='err != \"\"'>{{err}}</div>\n","import { Injectable } from '@angular/core';\nimport * as ChessJS from 'chess.js';\nimport { Color } from 'chessground/types';\nimport { BehaviorSubject } from 'rxjs';\nimport { IPlayerTeam } from '../components/chess-board/helpers/PlayerTeamHelper';\nimport { toColor } from '../shared/util/play';\nimport { PlayersTurnInfo } from '../shared/util/PlayersTurnInfo';\nimport { SharedDataService } from './shared-data.service';\nexport const Chess = typeof ChessJS === 'function' ? ChessJS : ChessJS.Chess;\n\n@Injectable()\nexport class ChessStatusService {\n  currentStatus = new BehaviorSubject<string>('');\n  currentTurn = new BehaviorSubject<[string, IPlayerTeam|null]>(['', null]);\n  previousTurn = new BehaviorSubject<[string, IPlayerTeam|null]>(['', null]);\n  nextTurn = new BehaviorSubject<[string, IPlayerTeam|null]>(['', null]);\n\n  private moveToFen: {[key: number]: string} = {};\n  private moveToPreviousMove: {[key: number]: ChessJS.Move} = {};\n  private blackWentFirst = false;\n\n  chess: ChessJS.ChessInstance;\n  playersTurnInfo: PlayersTurnInfo;\n\n  constructor(private sharedDataService: SharedDataService) {\n    this.chess = new Chess();\n    this.playersTurnInfo = new PlayersTurnInfo(this.sharedDataService.names.getValue());\n    this.resetPlayersTurnInfo();\n    this.sharedDataService.newName.subscribe(() => {\n      this.resetPlayersTurnInfo();\n    });\n    this.updateCurrentTurn();\n    this.updateMoveForFen();\n  }\n\n  private resetPlayersTurnInfo() {\n    this.playersTurnInfo = new PlayersTurnInfo(this.sharedDataService.names.getValue(), this.blackWentFirst);\n  }\n\n  move(move: string | ChessJS.ShortMove): ChessJS.Move | null {\n    const res = this.chess.move(move);\n    this.updateStatusFromGame(this.chess);\n    this.updateCurrentTurn();\n    this.updateMoveForFen(res!);\n    return res;\n  }\n\n  getColor() {\n    return toColor(this.chess);\n  }\n\n  getPgn() {\n    return this.chess.pgn();\n  }\n\n  setFen(fen: string) {\n    this.chess = new Chess(fen);\n    this.blackWentFirst = this.getColor() === 'black';\n\n    this.resetPlayersTurnInfo();\n    this.updateCurrentTurn();\n    this.updateMoveForFen();\n  }\n\n  getFenForMove(moveNumber: number) {\n    return this.moveToFen[moveNumber];\n  }\n\n  getPreviousMoveForMove(moveNumber: number) {\n    return this.moveToPreviousMove[moveNumber];\n  }\n\n  private updateMoveForFen(move?: ChessJS.Move) {\n    this.moveToFen[this.getNumMoves()] = this.chess.fen();\n    if (move) {\n      this.moveToPreviousMove[this.getNumMoves()] = move;\n    }\n  }\n\n  isGameOver() {\n    return this.currentStatus.getValue() != '';\n  }\n\n  setTimeout(color: Color) {\n    this.currentStatus.next(`timeout ${color}`);\n  }\n\n  getNumMoves() {\n    return this.chess.history().length;\n  }\n\n  getNumMovesConsideringIfBlackWentFirst() {\n    return this.getNumMoves() + (this.blackWentFirst ? 1 : 0);\n  }\n\n  isInCheck(moveNumber: number): boolean {\n    return (new Chess(this.moveToFen[moveNumber])).in_check();\n  }\n\n  isPlayersMove(playersId: string) {\n    return this.playersTurnInfo.isPlayersTurn(this.getNumMoves(), playersId)\n  }\n\n  didMoveBelongToPlayer(playersId: string) {\n    return this.playersTurnInfo.didMoveBelongToPlayer(this.getNumMoves(), playersId)\n  }\n\n  isPlayersMoveNext(playersId: string) {\n    return this.playersTurnInfo.isPlayersTurnNext(this.getNumMoves(), playersId);\n  }\n\n  private updateCurrentTurn() {\n    console.log(this.getNumMoves(), this.playersTurnInfo.getPlayer(this.getNumMoves()));\n    this.previousTurn.next(this.currentTurn.getValue());\n    this.currentTurn.next(this.getTupleForMoveNumber(this.getNumMoves()));\n    this.nextTurn.next(this.getTupleForMoveNumber(this.getNumMoves() + 1));\n  }\n\n  private getTupleForMoveNumber(moveNumber: number): [string, IPlayerTeam] {\n    const playerId = this.playersTurnInfo.getPlayer(moveNumber);\n    const playerTeamDict = this.sharedDataService.names.getValue()[playerId] || null;\n    return [playerId, playerTeamDict];\n  }\n\n  private updateStatusFromGame(chess: ChessJS.ChessInstance) {\n    if (chess.in_stalemate()) {\n      this.currentStatus.next('stalemate');\n    } else if (chess.in_checkmate()) {\n      this.currentStatus.next('checkmate');\n    } else if (chess.in_draw()) {\n      this.currentStatus.next('draw');\n    }\n  }\n}\n","\nimport { Color } from 'chessground/types';\nimport { PlayerTeamDict } from '../../components/chess-board/helpers/PlayerTeamHelper';\n\nexport class PlayersTurnInfo {\n  readonly players: {\n    'white': string[],\n    'black': string[]\n  };\n\n  constructor(private names: PlayerTeamDict, private blackWentFirst = false) {\n    if (names != null && Object.keys(names).length > 0) {\n      this.players = {\n        'white': Object.keys(names).filter(t => names[t].team == 'white').sort(),\n        'black': Object.keys(names).filter(t => names[t].team == 'black').sort(),\n      }\n    } else {\n      throw new Error('can this happen?');\n    }\n  }\n\n  getTeam(playerId: string): Color {\n    console.log(this.players, playerId);\n    return this.players['white'].filter(t => t == playerId).length === 1 ? 'white' : 'black';\n  }\n  \n  isPlayersTurnNext(moveNumber: number, playerId: string) {\n    return this.isPlayersTurn(moveNumber + 1, playerId);\n  }\n\n  isPlayersTurn(moveNumber: number, playerId: string) {\n    return this.getPlayer(moveNumber) == playerId;\n  }\n\n  getPlayer(moveNumber: number) {\n    const moveColour: Color = (moveNumber + + (this.blackWentFirst ? 1 : 0)) % 2 == 0 ? 'white' : 'black';\n    const teamsTurn = moveColour;\n    const playersInTeam = this.players[teamsTurn].length;\n    return this.players[teamsTurn][Math.floor(moveNumber/2) % playersInTeam];\n  }\n\n  didMoveBelongToPlayer(moveNumber: number, playerId: string) {\n    return this.names != null && this.names[this.getPlayer(moveNumber)].owner == playerId;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Color } from 'chessground/types';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { PlayerTeamDict } from 'src/app/components/chess-board/helpers/PlayerTeamHelper';\nimport { IMessage, ISendNames } from 'src/app/shared/peer-to-peer/defs';\nimport { ISharedData } from 'src/app/shared/peer-to-peer/shared-data';\nimport { PeerToPeerService } from 'src/app/services/peer-to-peer.service';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\nimport { RouteNames } from '../routes';\n\n@Component({\n  selector: 'app-mp-lobby',\n  templateUrl: './mp-lobby.component.html',\n  styleUrls: ['./mp-lobby.component.scss']\n})\nexport class MpLobbyComponent implements OnInit {\n  url: string;\n\n  connectedSubscription: Subscription;\n  numberReady = 0;\n  readyString = 'ready';\n  hostUrl: string;\n  sharedData: Observable<ISharedData>;\n\n  constructor(private peerToPeerService: PeerToPeerService,\n    private router: Router,\n    private sharedDataService: SharedDataService) {\n    this.hostUrl = '/join/' + this.peerToPeerService.getHostId();\n    this.url = window.location.host + this.router.parseUrl(this.hostUrl).toString();\n\n    this.sharedData = this.sharedDataService.sharedData.asObservable();\n\n    this.connectedSubscription = this.sharedDataService.newName.subscribe((id) => {\n      if (this.peerToPeerService.isHost) {\n        const message: ISendNames = {\n          command: 'SET_NAMES',\n          names: this.sharedDataService.names.getValue(),\n          sharedData: this.sharedDataService.sharedData.getValue()\n        };\n        this.peerToPeerService.sendSingleMessage(id, message);\n      }\n\n      this.setTeam(this.sharedDataService.getPlayerSync(this.peerToPeerService.getId()).team);\n    })\n    this.sharedDataService.names.subscribe((names) => {\n      this.numberReady = Object.values(names).filter(t => t.isReady).length;\n    })\n    this.peerToPeerService.messageSubject.subscribe((message) => {\n      if (message.data.command == 'START') {\n        this.startGameNoBroadcast();\n      }\n    })\n  }\n\n\n  ngOnInit(): void {\n    this.setTeam('white');\n  }\n\n  ngOnDestroy() {\n    this.connectedSubscription.unsubscribe();\n  }\n\n  setTeam(team: Color) {\n    this.sharedDataService.setTeam(team);\n  }\n\n  readyClick() {\n    console.log('ready click')\n    this.readyString = this.readyString == 'ready' ? 'not ready' : 'ready';\n    this.sharedDataService.setIsReady(this.readyString == 'not ready');\n  }\n\n  startGame() {\n    this.startGameNoBroadcast();\n    this.peerToPeerService.broadcast({\n      command: 'START'\n    });\n  }\n\n  startGameNoBroadcast() {\n    this.router.navigate([RouteNames.PLAY]);\n  }\n}\n","<style>\n.flex-container {\n  display: flex;\n  min-width: 550px;\n}\n\n.flex-child {\n  flex: 1;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 5px;\n  background: #eee;\n}  \n\n.flex-child:first-child {\n  margin-right: 20px;\n}\n</style>\n\n<h1>MP Lobby</h1>\n<p><a [routerLink]=\"hostUrl\">{{url}}</a></p>\n\n<app-timer-config></app-timer-config>\n\n<div class=\"flex-container\">\n  <div class=\"flex-child\">\n    <app-team-selection-panel [team]=\"'white'\"></app-team-selection-panel>\n  </div>\n  \n  <div class=\"flex-child\">\n    <app-team-selection-panel [team]=\"'black'\"></app-team-selection-panel>\n  </div>\n\n</div>\n<!-- <button mat-button (click)=\"readyClick()\">{{readyString}}</button>\n<p>numReady: {{numberReady}}</p> -->\n<div style=\"text-align:center; padding-top:10px\">\n  <button mat-stroked-button (click)=\"startGame()\">Start</button>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport sleep from 'sleep-promise';\nimport { environment } from 'src/environments/environment';\n\nconst BASE_URL = environment.production ? 'https://lichess.org' : '';\n\ninterface IImportResult {\n  id: string;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LichessService {\n\n  constructor(private http: HttpClient) { }\n\n  async importGame(pgn: string): Promise<string> {\n    if (false && !environment.production) {\n      return this.fakeImportGame();\n    }\n    const res = await this.http.post<IImportResult>(this.getUrl('/api/import'), {\n      pgn\n    }).toPromise();\n    console.log(res);\n    return res.url;\n  }\n\n  private async fakeImportGame() {\n    await sleep(1000);\n    return 'https://lichess.org/EUgjbNlf';\n  }\n\n  private getUrl(url: string) {\n    return `${BASE_URL}${url}`;\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { NgxChessgroundComponent } from 'ngx-chessground';\nimport { initial } from './shared/util/play';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'chess-mp';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .spacer {\n    flex: 1;\n  }\n\n  .toolbar {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 60px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n  .toolbar img {\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo {\n    height: 40px;\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo:hover {\n    opacity: 0.8;\n  }\n\n  .content {\n    display: flex;\n    margin: 82px auto 32px;\n    padding: 0 16px;\n    max-width: 1200px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n\n  app-chess-board {\n    width: 100%;\n  }\n</style>\n\n<div class=\"content\" role=\"main\">\n  <router-outlet style=\"width: 100%\"></router-outlet>\n\n  <!-- <app-chess-board style=\"width: 100%\"></app-chess-board> -->\n</div>\n  ","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-button',\n  templateUrl: './loading-button.component.html',\n  styleUrls: ['./loading-button.component.scss']\n})\n\n\nexport class LoadingButtonComponent implements OnInit {\n\n  @Input() text: string = 'text';\n  @Input() loading: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() buttonClass = 'mat-raised-button';\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","  <button\n    mat-button\n    [ngClass]=\"buttonClass\"\n    color=\"primary\"\n    [class.spinner]=\"loading\"\n    [disabled]=\"loading || disabled\">{{ text }}</button>\n","import { ChessInstance } from \"chess.js\";\nimport { IGetNextMove } from \"./IGetNextMove\";\n\nexport class NullGetNextMove implements IGetNextMove {\n  async getMove(cg: ChessInstance) {\n    return null;\n  }\n}","import { Injectable } from '@angular/core';\nimport Peer, { PeerJSOption } from 'peerjs';\nimport { interval, ReplaySubject, Subject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IMessage, MessageData } from '../shared/peer-to-peer/defs';\n\nconst debug = console.log;\nconst TIMEOUT_MS = 5000;\nconst HEROKU_HOST = 'heroku-chess-123.herokuapp.com';\nexport const DEFAULT_ID = 'default';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PeerToPeerService {\n  messageSubject: Subject<IMessage> = new ReplaySubject(100);\n  isHost = false;\n  isConnected = false;\n  alias = DEFAULT_ID;\n\n  private peer: Peer | null = null;\n  private connections: {[key: string]: Peer.DataConnection} = {};\n\n  constructor() {\n  }\n\n  getId() {\n    return this.peer?.id ?? DEFAULT_ID;\n  }\n\n  async setupAsHost() {\n    this.peer?.destroy();\n    this.peer = new Peer(this.getPeerConfig());\n    this.isHost = true;\n    await this.connectToPeerServer();\n    this.isConnected = true;\n\n    this.peer!.on('connection', (conn) => {\n      this.connections[conn.peer] = conn;\n      conn.on('data', this.messageHandler.bind(this));\n      this.attachErrorAndCloseConnEvents(conn);\n    });\n    this.peer!.on('close', () => {\n      debug(\"NOT ACCEPTING INCOMING CONNECTIONS??\");\n    });\n  }\n\n  async setupByConnectingToId(id: string) {\n    this.destroy();\n    this.peer = new Peer(this.getPeerConfig());\n    this.isHost = false;\n    await this.connectToPeerServer();\n\n    return new Promise((resolve, reject) => {\n      const timeoutSub = interval(TIMEOUT_MS).subscribe(t => {\n        reject(`Could not connect after ${TIMEOUT_MS}ms. Is the host ${id} correct?`);\n        timeoutSub.unsubscribe();\n      });\n\n      debug(`connecting to ${id}`)\n      const conn = this.peer!.connect(id);\n      conn.on('open', () => {\n        debug(`connected to ${id}!`);\n        this.connections[id] = conn;\n        this.isConnected = true;\n        conn.on('data', this.messageHandler.bind(this))\n        resolve(true);\n        timeoutSub.unsubscribe();\n      });\n      this.attachErrorAndCloseConnEvents(conn, (err) => {\n        reject(err);\n        conn.close();\n        timeoutSub.unsubscribe();\n      });\n\n    })\n  }\n\n  setAlias(alias: string) {\n    this.alias = alias;\n  }\n\n  getAlias() {\n    return this.alias\n  }\n\n  getHostId() {\n    if (this.isHost) return this.peer!.id;\n    return Object.keys(this.connections)[0];\n  }\n\n  broadcastAndToSelf(data: MessageData, from: string | null = null) {\n    const message = this.broadcast(data, from);\n    this.messageSubject.next(message);\n    return message;\n  }\n\n  broadcast(data: MessageData, from: string | null = null) {\n    const message: IMessage = {\n      from: from ?? this.peer?.id ?? DEFAULT_ID,\n      type: 'BROADCAST',\n      data: data\n    };\n    for (const key in this.connections) {\n      this.sendMessage(key, message);\n    }\n    return message;\n  }\n\n  sendSingleMessage(to: string, data: MessageData) {\n    if (!(to in this.connections)) return;\n    const message: IMessage = {\n      from: this.peer!.id,\n      type: 'SINGLE',\n      data: data\n    }\n    this.sendMessage(to, message);\n  }\n  \n  private getPeerConfig(): PeerJSOption {\n    if (false && !environment.production) {\n      return {\n        host: 'localhost',\n        path: '/myapp',\n        port: 9000,\n        key: 'peerjs'\n      };\n    }\n    return {\n      host: HEROKU_HOST,\n      port: 443,\n      secure: true\n    };\n  }\n\n  private connectToPeerServer() {\n    return new Promise((resolve, reject) => {\n      this.peer!.on('open', (id: string) => {\n        debug(`I am connected to peer server as (${this.peer!.id})`);\n        resolve(true);\n      });\n      this.peer!.on('error', (err) => {\n        reject(err);\n      });\n    })\n  }\n\n  private attachErrorAndCloseConnEvents(conn: Peer.DataConnection, additionalFn?: (err?: string) => void) {\n    conn.on('error', (err) => {\n      console.log(`connection: ${conn.peer} error! ${err}`);\n      this.onPeerDisconnected(conn);\n      if (additionalFn != null) additionalFn(err);\n    });\n\n    this.attachToConnCloseEvents(conn, () => {\n      console.log(`connection: ${conn.peer} closed!`);\n      this.onPeerDisconnected(conn);\n      if (additionalFn != null) additionalFn();\n    });\n  }\n\n  private attachToConnCloseEvents(conn: Peer.DataConnection, fn: () => void) {\n    conn.on('close', () => fn());\n    // @ts-ignore\n    conn.on('iceStateChanged', (status: any) => {\n      if (status === 'disconnected') {\n        fn();\n      }\n    })\n  }\n\n  private onPeerDisconnected(conn: any) {\n    delete this.connections[conn.peer];\n    this.broadcastAndToSelf({\n      command: 'DISCONNECTED',\n      name: conn.peer\n    });\n  }\n\n  private destroy() {\n    this.peer?.destroy();\n    this.isConnected = false;\n  }\n\n  private messageHandler(message: IMessage) {\n    if (this.isHost && message.type === 'BROADCAST') {\n      this.broadcast(message.data, message.from);\n    }\n    this.messageSubject.next(message);\n  }\n\n  private sendMessage(to: string, message: IMessage) {\n    if (!(to in this.connections)) return;\n    console.log(\"SEND MESSAGE\", message);\n    this.connections[to].send(message);\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"XhEF\";","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'replaceNullWithEmpty'\n})\nexport class ReplaceNullWithEmptyPipe implements PipeTransform {\n\n  transform(value: string | null, ...args: unknown[]): string {\n    return value ?? '';\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgxChessgroundModule } from 'ngx-chessground';\nimport {APP_BASE_HREF} from '@angular/common';\nimport { ChessBoardComponent } from './components/chess-board/chess-board.component';\nimport { MpLobbyComponent } from './pages/mp-lobby/mp-lobby.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { LoadingButtonComponent } from './components/loading-button/loading-button.component';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { JoinComponent } from './pages/join/join.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { PlayerListComponent } from './components/player-list/player-list.component';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatCardModule} from '@angular/material/card';\nimport { TeamSelectionPanelComponent } from './shared/mp-lobby/team-selection-panel/team-selection-panel.component';\nimport { PlayerConfigComponent } from './shared/mp-lobby/player-config/player-config.component';\nimport { SnapSliderComponent } from './components/snap-slider/snap-slider.component';\nimport { TimerConfigComponent } from './components/timer-config/timer-config.component';\nimport { ChessTimerFormatPipe } from './services/chess-timer-format.pipe';\nimport { ChessTimerComponent } from './components/chess-timer/chess-timer.component';\nimport { ReplaceNullWithEmptyPipe } from './pipes/replace-null-with-empty.pipe';\nimport { AnalyseButtonComponent } from './components/analyse-button/analyse-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChessBoardContainerComponent } from './components/chess-board-container/chess-board-container.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { RematchButtonComponent } from './components/rematch-button/rematch-button.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChessBoardComponent,\n    ChessTimerComponent,\n    ChessTimerFormatPipe,\n    MpLobbyComponent,\n\n    HomeComponent,\n    LoadingButtonComponent,\n    JoinComponent,\n    PlayerListComponent,\n    ReplaceNullWithEmptyPipe,\n    TeamSelectionPanelComponent,\n    PlayerConfigComponent,\n    SnapSliderComponent,\n    TimerConfigComponent,\n    AnalyseButtonComponent,\n    ChessBoardContainerComponent,\n    RematchButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgxChessgroundModule,\n    NoopAnimationsModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    MatSliderModule,\n    MatExpansionModule,\n    MatCardModule,\n    HttpClientModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [\n    {provide: APP_BASE_HREF, useValue: '/'}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Color } from 'chessground/types';\nimport { BehaviorSubject, Subject, Subscription, timer } from 'rxjs';\nimport { ITimerSettings } from '../shared/peer-to-peer/shared-data';\n\ninterface ITimerState {\n  turn: Color;\n  msWhenLastChanged: number;\n}\n\n@Injectable()\nexport class ChessTimerService implements OnDestroy {\n  timeout: Subject<Color> = new Subject();\n\n  private timers = {\n    white: new BehaviorSubject(10),\n    black: new BehaviorSubject(10)\n  };\n  \n  private timerState: ITimerState = {\n    turn: 'white',\n    msWhenLastChanged: -1\n  };\n\n  private paused = false;\n  private myTimer = timer(10, -1);\n  private whiteIncrement = 0;\n  private blackIncrement = 0;\n  private myTimerSubscription?: Subscription;\n\n  constructor() {\n  }\n\n  ngOnDestroy() {\n    this.destroyTimerIfExists();\n  }\n\n  getTimerObservable(color: Color) {\n    return this.timers[color];\n  }\n\n  private setStartingTime(totalTimeSeconds: number, startingTurn: Color = 'white', whiteIncrement = 20*1000, blackIncrement = 0) {\n    console.log(\"set starting time\", totalTimeSeconds, startingTurn);\n    this.timers['white'].next(totalTimeSeconds);\n    this.timers['black'].next(totalTimeSeconds);\n    this.timerState.turn = startingTurn;\n    this.whiteIncrement = whiteIncrement;\n    this.blackIncrement = blackIncrement;\n  }\n\n  setupTimer(timerSettings: ITimerSettings, startingColor: Color) {\n    if (!timerSettings.asymmetric) {\n      this.setStartingTime(timerSettings.whiteTime!, startingColor,\n        timerSettings.whiteIncrement!,\n        timerSettings.whiteIncrement!);\n    } else {\n      this.setStartingTime(timerSettings.whiteTime!, startingColor,\n        timerSettings.whiteIncrement!,\n        timerSettings.blackIncrement!);\n    }\n  }\n\n  startTimer() {\n    this.timerState.msWhenLastChanged = Date.now();\n    this.destroyTimerIfExists();\n    this.myTimer.subscribe(t => {\n      if (this.paused) return;\n      const currentMs = Date.now();\n      const diff = currentMs - this.timerState.msWhenLastChanged;\n\n      const timerBehaviourSubject = this.timers[this.timerState.turn];\n      if (timerBehaviourSubject.getValue() != 0) {\n        timerBehaviourSubject.next(Math.max(0, timerBehaviourSubject.getValue() - diff / 1000));\n        if (timerBehaviourSubject.getValue() == 0) {\n          this.timeout.next(this.timerState.turn);\n        }\n      }\n\n      this.timerState.msWhenLastChanged = currentMs;\n    })\n  }\n\n  pauseTimer() {\n    this.paused = true;\n  }\n\n  setTurn(turn: Color) {\n    if (turn == this.timerState.turn) return;\n    this.incrementTimer(this.timerState.turn, this.timerState.turn == 'white' ? this.whiteIncrement : this.blackIncrement);\n    this.timerState.turn = turn;\n  }\n\n  private destroyTimerIfExists() {\n    if (this.myTimerSubscription !== undefined) {\n      this.myTimerSubscription.unsubscribe();\n    }\n  }\n\n  private incrementTimer(color: Color, ms: number) {\n    this.timers[color].next(this.timers[color].getValue() + ms);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChessBoardResetService {\n  private reset = new Subject<boolean>();\n\n  constructor() { }\n\n  doReset() {\n    this.reset.next(true);\n  }\n\n  getResetObservable = () => this.reset.asObservable();\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Duration } from 'luxon';\n\n@Pipe({\n  name: 'chessTimerFormat'\n})\nexport class ChessTimerFormatPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    const val: number = value as number;\n    if (val == undefined) return value;\n\n    if (val > 10) {\n      return Duration.fromMillis(val*1000).toFormat('mm:ss');\n    }\n    return Duration.fromMillis(Math.round(val*100)*10).toFormat('mm:ss.SS').slice(0, 8);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ChessTimerFormatPipe } from 'src/app/services/chess-timer-format.pipe';\nimport { ChessTimerService } from 'src/app/services/chess-timer.service';\nimport { DEFAULT_ID, PeerToPeerService } from 'src/app/services/peer-to-peer.service';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\nimport { PlayerTeamDict } from '../chess-board/helpers/PlayerTeamHelper';\nimport { ChessStatusService } from 'src/app/services/chess-status.service';\n\n\n@Component({\n  selector: 'app-chess-timer',\n  templateUrl: './chess-timer.component.html',\n  styleUrls: ['./chess-timer.component.scss'],\n  providers: [ChessTimerFormatPipe]\n})\nexport class ChessTimerComponent {\n  whiteTime: BehaviorSubject<number>;\n  blackTime: BehaviorSubject<number>;\n  currentStatus: BehaviorSubject<string>;\n  currentTurn: Observable<string>;\n  currentId: Observable<string>;\n  nextId: Observable<string>;\n  myName: Observable<string>;\n  myId: string;\n\n  whiteNames!: Observable<PlayerTeamDict>;\n  blackNames!: Observable<PlayerTeamDict>;\n\n  @Input() inverted = false;\n  flexDirection = 'column';\n\n  constructor(private chessTimerService: ChessTimerService,\n    private ChessStatusService: ChessStatusService,\n    private peerToPeerService: PeerToPeerService,\n    private sharedDataService: SharedDataService) {\n\n    this.whiteTime = this.chessTimerService.getTimerObservable('white');\n    this.blackTime = this.chessTimerService.getTimerObservable('black');\n    this.currentStatus = this.ChessStatusService.currentStatus;\n\n    this.currentId = this.ChessStatusService.currentTurn.asObservable().pipe(map(([key, value]) => key));\n    this.nextId = this.ChessStatusService.nextTurn.asObservable().pipe(map(([key, value]) => key));\n    this.currentTurn = this.ChessStatusService.currentTurn.asObservable().pipe(map(([key, value]) => value?.name ?? key));\n    this.myId = this.peerToPeerService.getId();\n    this.myName = this.sharedDataService.names.pipe(map(t => t[this.peerToPeerService.getId()]?.name ?? DEFAULT_ID));\n  }\n\n  ngOnInit() {\n    this.flexDirection = !this.inverted ? 'column' : 'column-reverse';\n    this.whiteNames = this.sharedDataService.getNameObservable('white');\n    this.blackNames = this.sharedDataService.getNameObservable('black');\n  }\n}\n","<div style=\"display: inline-flex;\" [ngStyle]=\"{'flex-direction': flexDirection}\">\n  <app-player-list [currentId]=\"currentId | async | replaceNullWithEmpty\" [players]=\"blackNames | async\" [nextId]=\"nextId | async | replaceNullWithEmpty\"></app-player-list>\n  <!-- <p style=\"font-size:1em\">I AM: {{myName | async}}</p>\n  <p style=\"font-size:1em\">CurrentTurn: {{currentTurn | async}}</p> -->\n  <p class=\"time\">{{blackTime | async | chessTimerFormat}}</p>\n  <div *ngIf=\"(currentStatus | async) != ''\" class=\"result-container\">\n    <p class=\"final-result\" style=\"width:100%\">{{currentStatus | async}}</p>\n    <app-analyse-button style=\"width:100%\"></app-analyse-button>\n    <app-rematch-button style=\"width:100%\"></app-rematch-button>\n  </div>\n  <p class=\"time\">{{whiteTime | async | chessTimerFormat}}</p>\n  <app-player-list [currentId]=\"currentId | async | replaceNullWithEmpty\" [players]=\"whiteNames | async\" [nextId]=\"nextId | async | replaceNullWithEmpty\"></app-player-list>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n\n  constructor() { }\n\n  capture = new Multiplay('/assets/audio/Capture.mp3', 3);\n  move = new Multiplay('/assets/audio/Move.mp3', 3);\n  genericNotify = new Audio('/assets/audio/GenericNotify.mp3');\n\n  ngOnDestroy() {\n    // @ts-ignore: temporary workaround\n    this.capture = null;\n    // @ts-ignore\n    this.genericNotify = null;\n  }\n\n}\n\nclass Multiplay implements IPlayable {\n  private ct = 0;\n  private audios: Array<HTMLAudioElement> = [];\n\n  constructor(src: string, amount: number) {\n    for (let i = 0; i < amount; ++i) {\n      this.audios.push(new Audio(src));\n    }\n  }\n\n  async play() {\n    this.audios[this.ct].play();\n    this.ct = (this.ct+1) % this.audios.length;\n  }\n}\n\n\ninterface IPlayable {\n  play(): Promise<void>;\n}\n","import { IGetNextMove } from \"./GetNextMove/IGetNextMove\";\nimport { NullGetNextMove } from \"./GetNextMove/NullGetNextMove\";\nimport { StockfishGetNextMove } from \"./GetNextMove/StockfishGetNextMove\";\nimport { IPlayerTeam, PlayerTeamDict } from \"./PlayerTeamHelper\";\n\nexport class MoveHandlerResolver {\n  private moveHandlers: {\n    'white': IGetNextMove[],\n    'black': IGetNextMove[]\n  };\n\n  constructor(private whiteTeamDict: PlayerTeamDict, private blackTeamDict: PlayerTeamDict) {\n    this.moveHandlers = {\n      'white': this.buildMoveHandlers(whiteTeamDict),\n      'black': this.buildMoveHandlers(blackTeamDict)\n    }\n  }\n\n  private buildMoveHandlers(teamDict: PlayerTeamDict) {\n    const keys = Object.keys(teamDict);\n    if (keys.length == 0) {\n      return [new NullGetNextMove()];\n    }\n    \n    return keys.sort().map(key => this.buildMoveHandler(teamDict[key]));\n  }\n\n  private buildMoveHandler(player: IPlayerTeam): IGetNextMove {\n    if (player.engineSettings == null) return new NullGetNextMove();\n    return new StockfishGetNextMove(player.engineSettings);\n  }\n\n  getMoveHander(moveNumber: number): IGetNextMove {\n    const turnColor = moveNumber % 2 == 0 ? 'white' : 'black';\n    const numHandlers = this.moveHandlers[turnColor].length;\n    console.log(\"GET MOVE HANDLER\", moveNumber);\n    return this.moveHandlers[turnColor][Math.floor(moveNumber / 2) % numHandlers];\n  }\n}","import { Injectable } from '@angular/core';\nimport { Color } from 'chessground/types';\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { getDefaultEngineSettings, getDefaultNames, IEngineSettings, IPlayerTeam, PlayerTeamDict } from '../components/chess-board/helpers/PlayerTeamHelper';\nimport { IInfo, IInfoOptionals, IMessage, MessageData } from '../shared/peer-to-peer/defs';\nimport { getDefaultSharedData, ISharedData, ISharedDataOptionals } from '../shared/peer-to-peer/shared-data';\nimport { merge } from '../shared/util/helpers';\nimport { invertColor } from '../shared/util/play';\nimport { PeerToPeerService } from './peer-to-peer.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedDataService {\n  messageSubscription: Subscription;\n  names: BehaviorSubject<PlayerTeamDict> = new BehaviorSubject({});\n  numNames = new BehaviorSubject<number>(0);\n  newName: Subject<string> = new Subject();\n  sharedData: BehaviorSubject<ISharedData> = new BehaviorSubject(getDefaultSharedData());\n\n  private nameByTeamObservable: {\n    white: Observable<PlayerTeamDict>,\n    black: Observable<PlayerTeamDict>\n  };\n\n  constructor(private peerToPeerService: PeerToPeerService) {\n    this.messageSubscription = this.peerToPeerService.messageSubject.subscribe(this.processMessage.bind(this));\n    this.nameByTeamObservable = {\n      white: this.names.pipe(map(t => this.keyValueFilter(t, \"white\"))),\n      black: this.names.pipe(map(t => this.keyValueFilter(t, \"black\")))\n    }\n\n    if (!this.peerToPeerService.isConnected) {\n      this.names.next(getDefaultNames());\n    }\n  }\n\n  ngOnDestroy() {\n    this.messageSubscription.unsubscribe();\n  }\n\n  getNameObservable(color: Color) {\n    return this.nameByTeamObservable[color];\n  }\n\n  getColorNames(color: Color): PlayerTeamDict {\n    return this.keyValueFilter(this.names.getValue(), color);\n  }\n\n  private keyValueFilter(names: PlayerTeamDict, teamName: Color): PlayerTeamDict {\n    return Object.fromEntries(Object.entries(names).filter(([k, v]) => v.team == teamName));\n  }\n\n\n  private processMessage(message: IMessage) {\n    if (message.data.command === 'INFO') {\n      let currNames = this.names.getValue();\n      console.log(\"new msg\", message);\n      const nameId = message.data.idOverride ?? message.from;\n\n      const isNewName = !(nameId in currNames);\n      currNames[nameId] = {\n        ...currNames[nameId],\n        ...this.filterDict<IInfo>(message.data, ([k,v]) => k != 'engineSettings' && k != 'idOverride'),\n        isOwnedByMe: message.data.owner === this.peerToPeerService.getId()\n      };\n      if (message.data.engineSettings) {\n        const currEngineSettings = currNames[nameId].engineSettings ?? {};\n        currNames[nameId].engineSettings = {...currEngineSettings, ...message.data.engineSettings};\n        const engineSettings = currNames[nameId]!.engineSettings;\n        if (engineSettings) {\n          currNames[nameId].name = this.getEngineName(engineSettings);\n        }\n      }\n\n      this.names.next(currNames);\n      console.log(\"new names\", currNames);\n      if (isNewName) {\n        this.newName.next(nameId);\n        this.numNames.next(Object.keys(currNames).length);\n      }\n    }\n    else if (message.data.command === 'DISCONNECTED') {\n      const currNames = this.names.getValue();\n      let newNames: PlayerTeamDict = {};\n      for (const key in currNames) {\n        if (currNames[key].owner !== message.data.name) {\n          newNames[key] = currNames[key];\n        }\n      }\n\n      this.names.next(newNames);\n      console.log(\"NEXT NAMES after dc...\", newNames);\n    }\n    else if (message.data.command === 'SET_NAMES') {\n      const currNames = this.names.getValue();\n      const newNames = {...currNames, ...message.data.names}\n      this.names.next(newNames);\n      this.sharedData.next(message.data.sharedData);\n    }\n    else if (message.data.command === 'UPDATE_SHARED') {\n      this.sharedData.next(merge(this.sharedData.getValue(), message.data.sharedData));\n    }\n  }\n\n  setSharedData(sharedData: ISharedData | ISharedDataOptionals) {\n    this.peerToPeerService.broadcastAndToSelf({\n      command: 'UPDATE_SHARED',\n      sharedData: sharedData\n    });\n  }\n\n  filterDict<T>(dict: T, fn: (entry: [string, any]) => boolean) {\n    return Object.fromEntries(Object.entries(dict).filter(fn));\n  }\n\n  getPlayer(playerId: string): Observable<IPlayerTeam> {\n    return this.names.pipe(map(t => t[playerId]));\n  }\n\n  getPlayerSync(playerId: string): IPlayerTeam {\n    return this.names.getValue()[playerId];\n  }\n\n  setTeam(team: Color) {\n    return this.broadcastNamesMessage({team: team});\n  }\n\n  addCPU(team: Color) {\n    return this.setEngineSettings(this.getNewCPUId(), getDefaultEngineSettings(), team);\n  }\n\n  setIsReady(isReady: boolean) {\n    return this.broadcastNamesMessage({\n      isReady: isReady,\n    });\n  }\n\n  setEngineSettings(playerId: string, engineSettings: IEngineSettings, team: Color | null = null) {\n    const infoOptionals: IInfoOptionals = {\n      idOverride: playerId,\n      engineSettings: engineSettings\n    }\n    if (team != null) {\n      infoOptionals.team = team;\n    }\n   \n    return this.broadcastNamesMessage(\n      infoOptionals,\n      this.getEngineName({...this.getPlayerSync(playerId)?.engineSettings ?? {}, ...engineSettings})\n    );\n  }\n\n  setRematchRequested(rematchRequested: boolean) {\n    this.broadcastNamesMessage({rematchRequested});\n  }\n\n  swapAllTeamsAndRematch() {\n    const names = this.names.getValue();\n    for (const key of Object.keys(names)) {\n      names[key].team = invertColor(names[key].team);\n      names[key].rematchRequested = undefined;\n    }\n    this.setSharedData({matchCount: this.sharedData.getValue().matchCount + 1});\n    this.names.next(names);\n  }\n\n  private getEngineName(engineSettings: IEngineSettings) {\n    return `Stockfish (${engineSettings.elo}, ${(engineSettings.timeForMove ?? 0) / 1000}s)`;\n  }\n\n  private getNewCPUId() {\n    const keys = Object.keys(this.names.getValue());\n    console.log(keys);\n    let id = this.peerToPeerService.getId();\n    let ct = 0;\n    while (keys.includes(id)) {\n      id = `${this.peerToPeerService.getId()}_sf${ct}`;\n      ct++;\n    }\n    return id;\n  }\n\n  private broadcastNamesMessage(data: IInfoOptionals, nameOverride: string | null = null) {\n    let message: MessageData = {\n      command: 'INFO',\n      name: this.peerToPeerService.getAlias(),\n      owner: this.peerToPeerService.getId(),\n      ...data\n    };\n    if (nameOverride != null) {\n      message = {...message, name: nameOverride};\n    }\n\n    this.peerToPeerService.broadcastAndToSelf(message);\n  }\n}\n","import { Api } from \"chessground/api\";\nimport { PiecesDiff, Color, Key, Piece } from \"chessground/types\";\n\nimport {default as ChessJS} from 'chess.js';\nimport { FLAGS } from \"src/app/shared/chessjs-types\";\n\n\n\nexport function promoteIfNecessary(move: ChessJS.Move, cg: Api, oldColor: Color) {\n  if (move.promotion != undefined) {\n    let m: PiecesDiff = new Map();\n    const piece: Piece = {\n      role: 'queen',\n      color: oldColor\n    };\n    m.set(move.to, piece);\n    cg.setPieces(m);\n  } \n}\n\nexport function removeEnPassantIfNecessary(move: ChessJS.Move, cg: Api) {\n  if (move.flags.includes(FLAGS['EP_CAPTURE'])) {\n    const enPassantSquare: Key = move.to[0] + move.from[1];\n    let m: PiecesDiff = new Map();\n    m.set(enPassantSquare, undefined);\n    cg.setPieces(m);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatSliderChange } from '@angular/material/slider';\n\n@Component({\n  selector: 'app-snap-slider',\n  templateUrl: './snap-slider.component.html',\n  styleUrls: ['./snap-slider.component.scss']\n})\nexport class SnapSliderComponent implements OnInit {\n\n  @Input() label: string = \"label\";\n  @Input() value: number | undefined = 0;\n  @Input() min: number = 0;\n  @Input() max: number = 100000;\n  @Input() updateModel: (value: number) => void = () => 0;\n  @Input() roundFn: (value: number) => number = t => t;\n\n  _myValue: number = 0;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges() {\n    this.myValue = this.value ?? 0;\n  }\n\n  handleChange(e: MatSliderChange) {\n    const value = this.myValue;\n    this.updateModel(value);\n  }\n\n  setMyValue(e: MatSliderChange) {\n    const value = e.value ?? 0;\n    this.myValue = value;\n  }\n\n  get myValue() {\n    return this._myValue;\n  }\n\n  set myValue(val: number) {\n    this._myValue = this.roundFn(val);\n  }\n}\n","<div style=\"text-align: center\">\n  <p style=\"text-align: center; margin:0\">{{label}}: {{myValue}}</p>\n  <mat-slider\n  style=\"width:100%\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [value]=\"value\"\n  [(ngModel)]=\"myValue\" (input)=\"setMyValue($event)\"\n  (change)=\"handleChange($event)\"></mat-slider>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LichessService } from 'src/app/services/lichess.service';\nimport { ChessStatusService } from 'src/app/services/chess-status.service';\n\n@Component({\n  selector: 'app-analyse-button',\n  templateUrl: './analyse-button.component.html',\n  styleUrls: ['./analyse-button.component.scss']\n})\nexport class AnalyseButtonComponent implements OnInit {\n  analyseLink = '';\n  fetching = false;\n\n  constructor(\n    private chessStatusService: ChessStatusService,\n    private lichessService: LichessService) { }\n\n  ngOnInit(): void {\n  }\n\n  async fetchAnalysisLink() {\n    const pgn = this.chessStatusService.getPgn();\n    const link = await this.getAnalysisLink(pgn);\n    window.open(link);\n  }\n\n  async getAnalysisLink(pgn: string) {\n    if (this.analyseLink !== '') {\n      return this.analyseLink;\n    }\n    this.fetching = true;\n    let link = '';\n    try {\n      link = await this.lichessService.importGame(pgn);\n      this.analyseLink = link;\n    } catch (err) {\n      console.log(err);\n    } finally {\n      this.fetching = false;\n    }\n    return link;\n  }\n\n}\n","\n<app-loading-button\n  text=\"Analyse\"\n  (click)=\"fetchAnalysisLink()\"\n  [loading]=\"fetching\"></app-loading-button>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { map } from 'rxjs/operators';\nimport { ChessBoardResetService } from 'src/app/services/chess-board-reset.service';\nimport { PeerToPeerService } from 'src/app/services/peer-to-peer.service';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\nimport { default as sleep } from 'sleep-promise';\n\n@Component({\n  selector: 'app-rematch-button',\n  templateUrl: './rematch-button.component.html',\n  styleUrls: ['./rematch-button.component.scss']\n})\nexport class RematchButtonComponent implements OnInit {\n  private numNamesSubscription: Subscription;\n  private namesSubscription: Subscription;\n\n  numUniqNames = 0;\n  numReady = 0;\n  isReady = false;\n  resetStarted = false;\n\n  constructor(\n    private sharedDataService: SharedDataService,\n    private chessBoardResetService: ChessBoardResetService,\n    private peerToPeerService: PeerToPeerService) {\n\n    this.numNamesSubscription = this.sharedDataService.numNames.subscribe(t => {\n      this.numUniqNames = new Set(Object.entries(this.sharedDataService.names.getValue()).map(([k, val]) => val.owner)).size;      \n      this.checkRematchReady();\n    });\n\n    this.namesSubscription = this.sharedDataService.names.subscribe(t => {\n      this.numReady = Object.entries(this.sharedDataService.names.getValue()).filter(([k, val]) => val.owner === k && val.rematchRequested).length;\n      this.isReady = this.sharedDataService.getPlayerSync(this.peerToPeerService.getId()).rematchRequested === true;\n      this.checkRematchReady();\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n    this.numNamesSubscription.unsubscribe();\n    this.namesSubscription.unsubscribe();\n  }\n\n  rematch() {\n    this.sharedDataService.setRematchRequested(true);\n  }\n\n  private async checkRematchReady() {\n    if (this.numUniqNames > 0 && this.numUniqNames == this.numReady && !this.resetStarted) {\n      this.resetStarted = true;\n      await sleep(500);\n      this.sharedDataService.swapAllTeamsAndRematch();\n      this.chessBoardResetService.doReset();\n    }\n  }\n\n\n}\n","<button\n  [disabled]=\"isReady\"\n  mat-stroked-button\n  (click)=\"rematch()\">Rematch ({{numReady}}/{{numUniqNames}})</button>\n","import { Api } from \"chessground/api\";\nimport * as ChessJS from 'chess.js';\nimport { Chessground } from \"chessground\";\nimport { ChessInstance, Square } from 'chess.js';\nimport { Color, Key } from 'chessground/types';\n\nexport const Chess = typeof ChessJS === 'function' ? ChessJS : ChessJS.Chess;\n\nexport interface Unit {\n  name: string;\n  run: (el: HTMLElement) => Api;\n}\n\nexport const initial: Unit = {\n  name: 'Play legal moves from initial position',\n  run(el) {\n    const chess = new Chess();\n    const cg = Chessground(wrapped(el), {\n      turnColor: 'white',\n      movable: {\n        free: false,\n      },\n      draggable: {\n        showGhost: true,\n      },\n    });\n    setMovableForCurrentColour(cg, chess);\n\n    cg.set({\n      movable: { events: { after: playOtherSide(cg, chess) } },\n    });\n    return cg;\n  }\n}\n\nfunction wrapped(cont: HTMLElement) {\n  const el = document.createElement('div');\n  cont.className = 'in2d';\n  cont.innerHTML = '';\n  cont.appendChild(el);\n  return el;\n}\n\n\nexport function toDests(chess: ChessInstance): Map<Key, Key[]> {\n  const dests = new Map();\n  chess.SQUARES.forEach((s) => {\n    const ms = chess.moves({ square: s, verbose: true });\n    if (ms.length) {\n      dests.set(\n        s,\n        ms.map((m) => m.to)\n      );\n    }\n  });\n  return dests;\n}\n\nexport function playOtherSide(cg: Api, chess: ChessInstance) {\n  return (orig: Key, dest: Key) => {\n    chess.move({ from: orig as Square, to: dest as Square });\n    setMovableForCurrentColour(cg, chess);\n  };\n}\n\nexport function setMovableForCurrentColour(cg: Api, chess: ChessInstance) {\n  cg.set({\n    turnColor: toColor(chess),\n    movable: {\n      color: toColor(chess),\n      dests: toDests(chess),\n    },\n  });\n}\n\nexport function setMmovableForPremove(cg: Api, chess: ChessInstance) {\n  cg.set({\n    turnColor: toColor(chess),\n    movable: {\n      color: invertColor(toColor(chess)),\n      dests: toDests(chess),\n    },\n  });\n}\n\nexport function toColor(chess: ChessInstance): Color {\n  return chess.turn() === 'w' ? 'white' : 'black';\n}\n\nexport function invertColor(color: Color) {\n  return color == 'black' ? 'white' : 'black';\n}\n\nexport function toLightDark(chess: ChessInstance): 'light' | 'dark' {\n  return chess.turn() === 'w' ? 'light' : 'dark';\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { IPlayerTeam } from 'src/app/components/chess-board/helpers/PlayerTeamHelper';\nimport { SharedDataService } from 'src/app/services/shared-data.service';\n\n@Component({\n  selector: 'app-player-config',\n  templateUrl: './player-config.component.html',\n  styleUrls: ['./player-config.component.scss']\n})\nexport class PlayerConfigComponent implements OnInit {\n  @Input() playerId: string = '';\n  @Input() player: IPlayerTeam | null = null;\n  \n  updateTimeForMove = (val: number) => this.sharedDataService.setEngineSettings(this.playerId, {timeForMove: val});\n  updateElo = (val: number) => this.sharedDataService.setEngineSettings(this.playerId, {elo: val});\n  roundTo100 = (val: number) => Math.round(val/100) * 100;\n  roundTo50 = (val: number) => Math.round(val/50) * 50;\n\n  constructor(private sharedDataService: SharedDataService) { }\n\n  ngOnInit(): void {\n  }\n}\n","  <app-snap-slider\n  label=\"ms per move\"\n  [min]=\"0\"\n  [max]=\"5000\"\n  [value]=\"(this.player)?.engineSettings?.timeForMove\"\n  [roundFn]=\"roundTo100\"\n  [updateModel]=\"updateTimeForMove\"\n  ></app-snap-slider>\n\n  <app-snap-slider\n  label=\"elo\"\n  [min]=\"100\"\n  [max]=\"3600\"\n  [value]=\"(this.player)?.engineSettings?.elo\"\n  [roundFn]=\"roundTo50\"\n\n  [updateModel]=\"updateElo\"\n  ></app-snap-slider>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PreventDeactivateGuard } from './guards/prevent-deactivate.guard';\nimport { IsConnectedGuard } from './guards/is-connected.guard';\nimport { HomeComponent } from './pages/home/home.component';\nimport { JoinComponent } from './pages/join/join.component';\nimport { MpLobbyComponent } from './pages/mp-lobby/mp-lobby.component';\nimport { RouteNames } from './pages/routes';\nimport { ChessBoardContainerComponent } from './components/chess-board-container/chess-board-container.component';\n\nconst routes: Routes = [\n  { path: RouteNames.HOME, component: HomeComponent },\n  { path: RouteNames.MP_LOBBY, component: MpLobbyComponent, canActivate: [IsConnectedGuard] },\n  { path: RouteNames.PLAY, component: ChessBoardContainerComponent, canDeactivate: [PreventDeactivateGuard] },\n  { path: RouteNames.JOIN + '/:id', component: JoinComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Color } from \"chessground/types\";\nimport { DEFAULT_ID } from \"src/app/services/peer-to-peer.service\";\n\nexport function getDefaultNames() {\n  const engineSettings: IEngineSettings = getDefaultEngineSettings();\n  const engineSettings2: IEngineSettings = {\n    ...engineSettings,\n    elo: 1350\n  };\n\n  return {\n    [DEFAULT_ID]: createPlayerTeam('default'),\n    'stockfish': createPlayerTeam('Stockfish (3600)', 'black', engineSettings),\n    'stockfish2': createPlayerTeam('Stockfish (1000)', 'black', engineSettings2)\n\n  }\n}\n\nexport function getDefaultEngineSettings(): IEngineSettings {\n  return {\n    timeForMove: 700,\n    elo: 3600\n  };\n}\n\nfunction createPlayerTeam(name: string, color: Color = 'white', engineSettings: IEngineSettings | undefined = undefined): IPlayerTeam {\n  return {\n    name,\n    team: color,\n    owner: DEFAULT_ID,\n    isOwnedByMe: false,\n    isReady: true,\n    engineSettings\n  }\n}\n\nexport interface IEngineSettings {\n  timeForMove?: number;\n  elo?: number;\n};\n\nexport interface IPlayerTeam {\n  name: string;\n  team: Color;\n  owner: string;\n  isOwnedByMe: boolean;\n  isReady: boolean;\n  engineSettings?: IEngineSettings;\n  rematchRequested?: boolean;\n};\n\nexport type PlayerTeamDict = {[id: string]: IPlayerTeam};\n\n","import { ChessInstance } from \"chess.js\";\nimport { Api } from \"chessground/api\";\nimport { invertColor, toColor, toDests } from \"src/app/shared/util/play\";\n\nexport class OnePlayerBoardChanger {\n  constructor() {\n  }\n\n  static setMovable(chess: ChessInstance, cg: Api) {\n    cg.set({\n      turnColor: toColor(chess),\n      movable: {\n        color: toColor(chess),\n        dests: toDests(chess),\n        free: false,\n        showDests: true\n      },\n    });\n  }\n\n  static setPremovable(chess: ChessInstance, cg: Api) {\n    cg.set({\n      turnColor: toColor(chess),\n      movable: {\n        color: invertColor(toColor(chess)),\n        dests: toDests(chess),\n        free: false,\n        showDests: true\n      }\n    });\n  }\n\n  static setUnmovable(cg: Api) {\n    cg.set({\n      turnColor: undefined,\n      movable: {\n        color: undefined,\n        dests: new Map(),\n        free: false,\n        showDests: false\n      },\n    });\n  }\n\n}","import {ChessInstance, default as ChessJS} from 'chess.js';\nexport const Chess = typeof ChessJS === 'function' ? ChessJS : ChessJS.Chess;\n\nconst h = new Chess();\nexport const FLAGS = h.FLAGS;\n\n/*\nI want something like this to work, but alas\n\ndeclare var h: ChessInstance;\nexport let FLAGS: typeof h.FLAGS;\n */","import { Component, Input, OnInit } from '@angular/core';\nimport { PlayerTeamDict } from '../chess-board/helpers/PlayerTeamHelper';\n\n@Component({\n  selector: 'app-player-list',\n  templateUrl: './player-list.component.html',\n  styleUrls: ['./player-list.component.scss']\n})\nexport class PlayerListComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() players: PlayerTeamDict | null = null;\n  @Input() currentId = '';\n  @Input() nextId: string | null = '';\n\n  ngOnInit(): void {\n    if (this.players == null) throw new Error('players is required');\n    console.log(this.players);\n  }\n}\n","<ul>\n  <li *ngFor=\"let item of players | keyvalue\" [class.bold]=\"item.key == currentId\" [style.text-decoration]=\"item.key == nextId || item.key == currentId ? 'underline' : 'none'\">{{item.value?.name}}</li>\n</ul>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}